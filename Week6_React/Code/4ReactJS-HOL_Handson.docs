Post.js
  class Post {
    constructor(id, title, body) {
      this.id = id;
      this.title = title;
      this.body = body;
    }
  }
  
  export default Post;


Posts.js
// src/Posts.js
import React from 'react';
import Post from './Post';

class Posts extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      posts: [],
    };
  }

  // Step 6: Fetch posts and load into state
  loadPosts = () => {
    fetch('https://jsonplaceholder.typicode.com/posts')
      .then((response) => {
        if (!response.ok) {
          throw new Error('Network response was not ok.');
        }
        return response.json();
      })
      .then((data) => {
        const posts = data.map(
          (item) => new Post(item.id, item.title, item.body)
        );
        this.setState({ posts });
      })
      .catch((error) => {
        alert("Error fetching posts: " + error.message);
      });
  };

  // Step 7: Call loadPosts in lifecycle hook
  componentDidMount() {
    this.loadPosts();
  }

  // Step 9: Catch any unexpected render errors
  componentDidCatch(error, info) {
    alert('Something went wrong: ' + error.toString());
  }

  // Step 8: Render posts
  render() {
    return (
      <div style={{ padding: '20px' }}>
        <h2>Blog Posts</h2>
        {this.state.posts.map((post) => (
          <div key={post.id} style={{ marginBottom: '20px' }}>
            <h4>{post.title}</h4>
            <p>{post.body}</p>
          </div>
        ))}
      </div>
    );
  }
}

export default Posts;



App.js
// src/App.js
import React from 'react';
import './App.css';
import Posts from './Posts';

function App() {
  return (
    <div className="App">
      <Posts />
    </div>
  );
}

export default App;
